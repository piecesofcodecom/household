name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Extract tag version number
    - name: Extract tag version number
      id: get_version
      uses: battila7/get-version-action@v2

    # Set up Node.js
    - uses: actions/setup-node@v3
      with:
        node-version: '18'
    - run: npm install

    # Build Release
    - name: Generate release
      run: mkdir styles && mkdir css && npm run release

    # Substitute Manifest and Download Links For Versioned Ones
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: /home/runner/work/household/household/release/system.json
      env:
        version: ${{steps.get_version.outputs.version-without-v}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/system.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/system.zip

    # Create a zip file with all files required by the system to add to the release
    - run: cd release && zip -r ./system.zip system.json template.json readme.md LICENSE.txt assets/ build/ fonts/ lang/ templates/ packs/ readme/ styles/

    # Update Release with Files
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true # Set this to false if you want to prevent updating existing releases
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.REPO_SEC }}
        artifacts: './release/system.json, ./release/system.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}

    
